# language: swift
# os: osx
# osx_image: xcode10

# branches:
#   only:
#   - feature/travis-ci-swift4.2

# env:
#   global: 
#   - PROJECT_NAME=JSONUtilities
#   matrix:
#   - PLATFORM=iOS-iPhoneX SCHEME="JSONUtilities" DESTINATION=platform=iOS Simulator,OS=12.0,name=iPhone X
#   - PLATFORM=iOS-iPhone8 SCHEME="JSONUtilities" DESTINATION=platform=iOS Simulator,OS=12.0,name=iPhone 8


# script: 
# # xcode_destination: $DESTINATION
#   - set -o pipefail && xcodebuild -project JSONUtilities.xcodeproj -scheme $SCHEME -destination "platform=iOS Simulator,OS=12.0,name=iPhone X" build-for-testing test | xcpretty


os:
  - osx
language: generic
osx_image: xcode10

branches:
  only:
  - feature/travis-ci-swift4.2

env:
  global:
  - PROJECT_NAME=JSONUtilities
  matrix:
  - PLATFORM=Mac
  - PLATFORM=iOS NAME='iPhone X'
  - PLATFORM=tvOS NAME='Apple TV 1080p'
  - PLATFORM=watchOS
  - PLATFORM=SPM

before_install:
  - if [ -n "$NAME" ]; then
      export UUID=$(instruments -s | ruby -e "ARGF.each_line{ |ln| ln =~ /$NAME .* \[(.*)\]/; if \$1; puts(\$1); exit; end }");
    fi

script:
  - set -o pipefail;
    case $PLATFORM in
    Mac)
      xcodebuild -scheme $PROJECT_NAME -enableCodeCoverage YES test | xcpretty;;
    iOS|tvOS)
      xcodebuild  -scheme $SCHEME -destination "platform=iOS Simulator,OS=12.0,name=iPhone X build-for-testing test | xcpretty;;
    watchOS)
      xcodebuild -scheme $PROJECT_NAME -destination "name=Apple Watch - 38mm" | xcpretty;;
    SPM)
      swift build && swift test;;
    esac

after_success:
  - sleep 5
  - bash <(curl -s https://codecov.io/bash)
